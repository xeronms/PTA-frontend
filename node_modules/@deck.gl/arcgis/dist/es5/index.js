"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loadArcGISModules = loadArcGISModules;

var _deckProps = _interopRequireDefault(require("./deck-props"));

var _deckLayer = _interopRequireDefault(require("./deck-layer"));

var _deckLayerView2d = _interopRequireDefault(require("./deck-layer-view-2d"));

var _deckRenderer = _interopRequireDefault(require("./deck-renderer"));

var _esriLoader = require("esri-loader");

let arcGIS = null;

async function loadArcGISModules(modules, loadScriptOptions) {
  const namespace = Array.isArray(modules) ? null : modules;
  await loadArcGISModule(namespace, loadScriptOptions);

  if (Array.isArray(modules)) {
    return (0, _esriLoader.loadModules)(modules, loadScriptOptions).then(array => {
      return { ...arcGIS,
        modules: array
      };
    });
  }

  return arcGIS;
}

function loadArcGISModule(esri, loadScriptOptions) {
  if (arcGIS) {
    return arcGIS;
  }

  if (esri) {
    const Layer = esri.layers.Layer;
    const Accessor = esri.core.Accessor;
    const BaseLayerViewGL2D = esri.views['2d'].layers.BaseLayerViewGL2D;
    const externalRenderers = esri.views['3d'].externalRenderers;
    return initialize(Layer, Accessor, BaseLayerViewGL2D, externalRenderers);
  }

  return (0, _esriLoader.loadModules)(['esri/layers/Layer', 'esri/core/Accessor', 'esri/views/2d/layers/BaseLayerViewGL2D', 'esri/views/3d/externalRenderers'], loadScriptOptions).then(([Layer, Accessor, BaseLayerViewGL2D, externalRenderers]) => {
    return initialize(Layer, Accessor, BaseLayerViewGL2D, externalRenderers);
  });
}

function initialize(Layer, Accessor, BaseLayerViewGL2D, externalRenderers) {
  const DeckProps = (0, _deckProps.default)(Accessor);
  const DeckLayerView2D = (0, _deckLayerView2d.default)(BaseLayerViewGL2D);
  const DeckLayer = (0, _deckLayer.default)(DeckProps, Layer, DeckLayerView2D);
  const DeckRenderer = (0, _deckRenderer.default)(DeckProps, externalRenderers);
  arcGIS = {
    DeckLayer,
    DeckRenderer
  };
  return arcGIS;
}
//# sourceMappingURL=index.js.map