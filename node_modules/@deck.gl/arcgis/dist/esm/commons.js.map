{"version":3,"sources":["../../src/commons.js"],"names":["Deck","Model","Buffer","Framebuffer","instrumentGLContext","withParameters","initializeResources","gl","buffer","Int8Array","model","vs","fs","attributes","a_pos","vertexCount","drawMode","deckFbo","width","height","deckInstance","viewState","controller","parameters","depthTest","_framebuffer","_customRender","redrawReason","_drawLayers","redraw","render","screenFbo","getParameter","dpr","window","devicePixelRatio","Math","round","resize","setProps","blend","blendFunc","framebuffer","viewport","setUniforms","u_texture","draw","finalizeResources","finalize","delete"],"mappings":"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","sourcesContent":["/* eslint-disable no-invalid-this */\n\nimport {Deck} from '@deck.gl/core';\nimport {Model, Buffer, Framebuffer, instrumentGLContext, withParameters} from '@luma.gl/core';\n\nexport function initializeResources(gl) {\n  instrumentGLContext(gl);\n\n  this.buffer = new Buffer(gl, new Int8Array([-1, -1, 1, -1, -1, 1, 1, 1]));\n\n  this.model = new Model(gl, {\n    vs: `\n      attribute vec2 a_pos;\n      varying vec2 v_texcoord;\n      void main(void) {\n          gl_Position = vec4(a_pos, 0.0, 1.0);\n          v_texcoord = (a_pos + 1.0) / 2.0;\n      }\n    `,\n    fs: `\n      precision mediump float;\n      uniform sampler2D u_texture;\n      varying vec2 v_texcoord;\n      void main(void) {\n          vec4 rgba = texture2D(u_texture, v_texcoord);\n          rgba.rgb *= rgba.a;\n          gl_FragColor = rgba;\n      }\n    `,\n    attributes: {\n      a_pos: this.buffer\n    },\n    vertexCount: 4,\n    drawMode: gl.TRIANGLE_STRIP\n  });\n\n  this.deckFbo = new Framebuffer(gl, {width: 1, height: 1});\n\n  this.deckInstance = new Deck({\n    // The view state will be set dynamically to track the MapView current extent.\n    viewState: {},\n\n    // Input is handled by the ArcGIS API for JavaScript.\n    controller: false,\n\n    // We use the same WebGL context as the ArcGIS API for JavaScript.\n    gl,\n\n    // We need depth testing in general; we don't know what layers might be added to the deck.\n    parameters: {\n      depthTest: true\n    },\n\n    // This deck renders into an auxiliary framebuffer.\n    _framebuffer: this.deckFbo,\n\n    // To disable canvas resizing, since the FBO is owned by the ArcGIS API for JavaScript.\n    width: null,\n    height: null,\n\n    _customRender: redrawReason => {\n      if (redrawReason === 'arcgis') {\n        this.deckInstance._drawLayers(redrawReason);\n      } else {\n        this.redraw();\n      }\n    }\n  });\n}\n\nexport function render({gl, width, height, viewState}) {\n  const screenFbo = gl.getParameter(gl.FRAMEBUFFER_BINDING);\n\n  /* global window */\n  const dpr = window.devicePixelRatio;\n  width = Math.round(width * dpr);\n  height = Math.round(height * dpr);\n\n  this.deckFbo.resize({width, height});\n\n  this.deckInstance.setProps({viewState});\n  // redraw deck immediately into deckFbo\n  this.deckInstance.redraw('arcgis');\n\n  // We overlay the texture on top of the map using the full-screen quad.\n  withParameters(\n    gl,\n    {\n      blend: true,\n      blendFunc: [gl.ONE, gl.ONE_MINUS_SRC_ALPHA],\n      framebuffer: screenFbo,\n      viewport: [0, 0, width, height]\n    },\n    () => {\n      this.model.setUniforms({u_texture: this.deckFbo}).draw();\n    }\n  );\n}\n\nexport function finalizeResources() {\n  this.deckInstance?.finalize();\n  this.deckInstance = null;\n\n  this.model?.delete();\n  this.buffer?.delete();\n  this.deckFbo?.delete();\n}\n"],"file":"commons.js"}