import { initializeResources, render, finalizeResources } from './commons';
export default function createDeckLayerView2D(BaseLayerViewGL2D) {
  return BaseLayerViewGL2D.createSubclass({
    properties: {
      deckgl: {},
      deckFbo: {},
      model: {},
      buffer: {}
    },

    attach() {
      const gl = this.context;
      initializeResources.call(this, gl);
      this.layer.deck.on('change', props => this.deckInstance.setProps(props));
      this.deckInstance.setProps(this.layer.deck.toJSON());
    },

    redraw() {
      this.requestRender();
    },

    detach() {
      finalizeResources.call(this);
    },

    render(renderParameters) {
      const [width, height] = this.view.state.size;
      const state = renderParameters.state;
      render.call(this, {
        gl: renderParameters.context,
        width,
        height,
        viewState: {
          latitude: this.view.center.latitude,
          longitude: this.view.center.longitude,
          zoom: this.view.featuresTilingScheme.scaleToLevel(state.scale),
          bearing: -state.rotation,
          pitch: 0
        }
      });
    }

  });
}
//# sourceMappingURL=deck-layer-view-2d.js.map