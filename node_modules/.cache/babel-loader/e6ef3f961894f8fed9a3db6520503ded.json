{"ast":null,"code":"import _classCallCheck from \"C:/Users/ESG-dell/Documents/Dev/Hachathon-miasta/PTA-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/ESG-dell/Documents/Dev/Hachathon-miasta/PTA-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/ESG-dell/Documents/Dev/Hachathon-miasta/PTA-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/ESG-dell/Documents/Dev/Hachathon-miasta/PTA-frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { ClipSpace, setParameters, withParameters, clear } from '@luma.gl/core';\nimport Pass from './pass';\n\nvar ScreenPass = /*#__PURE__*/function (_Pass) {\n  _inherits(ScreenPass, _Pass);\n\n  var _super = _createSuper(ScreenPass);\n\n  function ScreenPass(gl) {\n    var _this;\n\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, ScreenPass);\n\n    _this = _super.call(this, gl, props);\n    var module = props.module,\n        fs = props.fs,\n        id = props.id;\n    _this.model = new ClipSpace(gl, {\n      id: id,\n      fs: fs,\n      modules: [module]\n    });\n    return _this;\n  }\n\n  _createClass(ScreenPass, [{\n    key: \"render\",\n    value: function render(params) {\n      var _this2 = this;\n\n      var gl = this.gl;\n      setParameters(gl, {\n        viewport: [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]\n      });\n      withParameters(gl, {\n        framebuffer: params.outputBuffer,\n        clearColor: [0, 0, 0, 0]\n      }, function () {\n        return _this2._renderPass(gl, params);\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      this.model.delete();\n      this.model = null;\n    }\n  }, {\n    key: \"_renderPass\",\n    value: function _renderPass(gl, _ref) {\n      var inputBuffer = _ref.inputBuffer,\n          outputBuffer = _ref.outputBuffer;\n      clear(gl, {\n        color: true\n      });\n      this.model.draw({\n        moduleSettings: this.props.moduleSettings,\n        uniforms: {\n          texture: inputBuffer,\n          texSize: [inputBuffer.width, inputBuffer.height]\n        },\n        parameters: {\n          depthWrite: false,\n          depthTest: false\n        }\n      });\n    }\n  }]);\n\n  return ScreenPass;\n}(Pass);\n\nexport { ScreenPass as default };","map":{"version":3,"sources":["../../../src/passes/screen-pass.js"],"names":["constructor","props","id","fs","modules","render","gl","setParameters","viewport","withParameters","framebuffer","params","clearColor","delete","_renderPass","outputBuffer","clear","color","moduleSettings","uniforms","texture","texSize","inputBuffer","parameters","depthWrite","depthTest"],"mappings":";;;;AAMA,SAAA,SAAA,EAAA,aAAA,EAAA,cAAA,EAAA,KAAA,QAAA,eAAA;AACA,OAAA,IAAA,MAAA,QAAA;;IAEe,U;;;;;AACbA,sBAAW,EAAXA,EAA4B;AAAA;;AAAA,QAAZC,KAAY,uEAAjB,EAAiB;;AAAA;;AAC1B,8BAAA,EAAA,EAAA,KAAA;AACA,QAAM,MAAN,GAAA,KAAA,CAAM,MAAN;AAAA,QAAM,EAAN,GAAA,KAAA,CAAM,EAAN;AAAA,QAAmBC,EAAnB,GAAA,KAAA,CAAmBA,EAAnB;AACA,UAAA,KAAA,GAAa,IAAA,SAAA,CAAA,EAAA,EAAkB;AAACA,MAAAA,EAAD,EAACA,EAAD;AAAKC,MAAAA,EAAL,EAAKA,EAAL;AAASC,MAAAA,OAAO,EAAE,CAAA,MAAA;AAAlB,KAAlB,CAAb;AAH0B;AAI3B;;;;WAEDC,gBAAM,MAANA,EAAe;AAAA;;AACb,UAAMC,EAAE,GAAG,KAAX,EAAA;AAEAC,MAAAA,aAAa,CAAA,EAAA,EAAK;AAACC,QAAAA,QAAQ,EAAE,CAAA,CAAA,EAAA,CAAA,EAAOF,EAAE,CAAT,kBAAA,EAA8BA,EAAE,CAAhC,mBAAA;AAAX,OAAL,CAAbC;AAEAE,MAAAA,cAAc,CAAA,EAAA,EAAK;AAACC,QAAAA,WAAW,EAAEC,MAAM,CAApB,YAAA;AAAmCC,QAAAA,UAAU,EAAE,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AAA/C,OAAL,EAAmE;AAAA,eAC/E,MAAA,CAAA,WAAA,CAAA,EAAA,EADFH,MACE,CAD+E;AAAA,OAAnE,CAAdA;AAGD;;;WAEDI,mBAAS;AACP,WAAA,KAAA,CAAA,MAAA;AACA,WAAA,KAAA,GAAA,IAAA;AACD;;;WAUDC,qBAAW,EAAXA,QAA6C;AAAA,UAA7B,WAA6B,QAA7B,WAA6B;AAAA,UAAfC,YAAe,QAAfA,YAAe;AAC3CC,MAAAA,KAAK,CAAA,EAAA,EAAK;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAL,CAALD;AACA,WAAA,KAAA,CAAA,IAAA,CAAgB;AACdE,QAAAA,cAAc,EAAE,KAAA,KAAA,CADF,cAAA;AAEdC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,OAAO,EADC,WAAA;AAERC,UAAAA,OAAO,EAAE,CAACC,WAAW,CAAZ,KAAA,EAAoBA,WAAW,CAA/B,MAAA;AAFD,SAFI;AAMdC,QAAAA,UAAU,EAAE;AACVC,UAAAA,UAAU,EADA,KAAA;AAEVC,UAAAA,SAAS,EAAE;AAFD;AANE,OAAhB;AAWD;;;;EA3CY,I;;SAAA,U","sourcesContent":["//\n// A base render pass.\n//\n// Attribution: This class and the multipass system were inspired by\n// the THREE.js EffectComposer and *Pass classes\n\nimport {ClipSpace, setParameters, withParameters, clear} from '@luma.gl/core';\nimport Pass from './pass';\n\nexport default class ScreenPass extends Pass {\n  constructor(gl, props = {}) {\n    super(gl, props);\n    const {module, fs, id} = props;\n    this.model = new ClipSpace(gl, {id, fs, modules: [module]});\n  }\n\n  render(params) {\n    const gl = this.gl;\n\n    setParameters(gl, {viewport: [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]});\n\n    withParameters(gl, {framebuffer: params.outputBuffer, clearColor: [0, 0, 0, 0]}, () =>\n      this._renderPass(gl, params)\n    );\n  }\n\n  delete() {\n    this.model.delete();\n    this.model = null;\n  }\n\n  // Private methods\n\n  /**\n   * Renders the pass.\n   * This is an abstract method that should be overridden.\n   * @param {Framebuffer} inputBuffer - Frame buffer that contains the result of the previous pass\n   * @param {Framebuffer} outputBuffer - Frame buffer that serves as the output render target\n   */\n  _renderPass(gl, {inputBuffer, outputBuffer}) {\n    clear(gl, {color: true});\n    this.model.draw({\n      moduleSettings: this.props.moduleSettings,\n      uniforms: {\n        texture: inputBuffer,\n        texSize: [inputBuffer.width, inputBuffer.height]\n      },\n      parameters: {\n        depthWrite: false,\n        depthTest: false\n      }\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}