{"ast":null,"code":"import _slicedToArray from \"C:/Users/ESG-dell/Documents/Dev/Hachathon-miasta/PTA-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"C:/Users/ESG-dell/Documents/Dev/Hachathon-miasta/PTA-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:/Users/ESG-dell/Documents/Dev/Hachathon-miasta/PTA-frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/ESG-dell/Documents/Dev/Hachathon-miasta/PTA-frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/ESG-dell/Documents/Dev/Hachathon-miasta/PTA-frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/ESG-dell/Documents/Dev/Hachathon-miasta/PTA-frontend/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _excluded = [\"timestamp\"];\nimport { DirectionalLight } from './directional-light';\nimport { getSunlightDirection } from './suncalc';\n\nvar SunLight = /*#__PURE__*/function (_DirectionalLight) {\n  _inherits(SunLight, _DirectionalLight);\n\n  var _super = _createSuper(SunLight);\n\n  function SunLight(_ref) {\n    var _this;\n\n    var timestamp = _ref.timestamp,\n        others = _objectWithoutProperties(_ref, _excluded);\n\n    _classCallCheck(this, SunLight);\n\n    _this = _super.call(this, others);\n    _this.timestamp = timestamp;\n    return _this;\n  }\n\n  _createClass(SunLight, [{\n    key: \"getProjectedLight\",\n    value: function getProjectedLight(_ref2) {\n      var layer = _ref2.layer;\n      var viewport = layer.context.viewport;\n      var isGlobe = viewport.resolution > 0;\n\n      if (isGlobe) {\n        var _getSunlightDirection = getSunlightDirection(this.timestamp, 0, 0),\n            _getSunlightDirection2 = _slicedToArray(_getSunlightDirection, 3),\n            x = _getSunlightDirection2[0],\n            y = _getSunlightDirection2[1],\n            z = _getSunlightDirection2[2];\n\n        this.direction = [x, -z, y];\n      } else {\n        var latitude = viewport.latitude,\n            longitude = viewport.longitude;\n        this.direction = getSunlightDirection(this.timestamp, latitude, longitude);\n      }\n\n      return this;\n    }\n  }]);\n\n  return SunLight;\n}(DirectionalLight);\n\nexport { SunLight as default };","map":{"version":3,"sources":["../../../../src/effects/lighting/sun-light.js"],"names":["constructor","others","getProjectedLight","layer","viewport","isGlobe","getSunlightDirection","longitude"],"mappings":";;;;;;;AAAA,SAAA,gBAAA,QAAA,qBAAA;AACA,SAAA,oBAAA,QAAA,WAAA;;IAEe,Q;;;;;AACbA,0BAAoC;AAAA;;AAAA,QAAxB,SAAwB,QAAxB,SAAwB;AAAA,QAATC,MAAS;;AAAA;;AAClC,8BAAA,MAAA;AAEA,UAAA,SAAA,GAAA,SAAA;AAHkC;AAInC;;;;WAEDC,kCAA2B;AAAA,UAARC,KAAQ,SAARA,KAAQ;AACzB,UAAOC,QAAP,GAAmBD,KAAK,CAAxB,OAAA,CAAOC,QAAP;AACA,UAAMC,OAAO,GAAGD,QAAQ,CAARA,UAAAA,GAAhB,CAAA;;AAEA,UAAA,OAAA,EAAa;AAEX,oCAAkBE,oBAAoB,CAAC,KAAD,SAAA,EAAA,CAAA,EAAtC,CAAsC,CAAtC;AAAA;AAAA,YAAM,CAAN;AAAA,YAAM,CAAN;AAAA,YAAM,CAAN;;AACA,aAAA,SAAA,GAAiB,CAAA,CAAA,EAAI,CAAJ,CAAA,EAAjB,CAAiB,CAAjB;AAHF,OAAA,MAIO;AACL,YAAM,QAAN,GAAA,QAAA,CAAM,QAAN;AAAA,YAAiBC,SAAjB,GAAA,QAAA,CAAiBA,SAAjB;AACA,aAAA,SAAA,GAAiBD,oBAAoB,CAAC,KAAD,SAAA,EAAA,QAAA,EAArC,SAAqC,CAArC;AACD;;AAED,aAAA,IAAA;AACD;;;;EArBY,gB;;SAAA,Q","sourcesContent":["import {DirectionalLight} from './directional-light';\nimport {getSunlightDirection} from './suncalc';\n\nexport default class SunLight extends DirectionalLight {\n  constructor({timestamp, ...others}) {\n    super(others);\n\n    this.timestamp = timestamp;\n  }\n\n  getProjectedLight({layer}) {\n    const {viewport} = layer.context;\n    const isGlobe = viewport.resolution > 0;\n\n    if (isGlobe) {\n      // Rotate vector to align with the direction of the globe projection (up at lon:0,lat:0 is [0, -1, 0])\n      const [x, y, z] = getSunlightDirection(this.timestamp, 0, 0);\n      this.direction = [x, -z, y];\n    } else {\n      const {latitude, longitude} = viewport;\n      this.direction = getSunlightDirection(this.timestamp, latitude, longitude);\n    }\n\n    return this;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}