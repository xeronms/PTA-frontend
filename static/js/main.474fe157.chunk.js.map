{"version":3,"sources":["components/NavbarComponent.js","geodata/bus_stops.geojson","components/MapboxEx.js","components/LeftMenu.js","components/cards/HoursCard.js","components/cards/TicketTypeCard.js","components/cards/WeekDayCard.js","components/cards/Cards.js","pages/MapContainer.js","data.js","pages/Home.js","App.js","index.js"],"names":["NavbarComponent","Navbar","bg","variant","className","Container","style","maxWidth","Brand","href","Nav","fontSize","Item","Link","INITIAL_VIEW_STATE","latitude","longitude","zoom","bearing","pitch","NAV_CONTROL_STYLE","position","top","right","MapboxEx","useState","layers","GeoJsonLayer","id","data","busDataPolygons","filled","pointRadiusMinPixels","pointRadiusScale","getPointRadius","getFillColor","pickable","extruded","autoHighlight","getElevation","strokeWeight","stroked","opacity","wireframe","onClick","info","object","alert","properties","name","LineLayer","testRoutes","getWidth","getSourcePosition","d","from","coordinates","getTargetPosition","to","getColor","Math","sqrt","inbound","outbound","initialViewState","controller","ContextProvider","MapContext","Provider","getTooltip","mapStyle","mapboxApiAccessToken","LeftMenu","HoursCard","TicketTypeCard","WeekDayCard","Cards","MapContainer","makeAnimated","React","Card","Body","options","label","value","animatedComponents","Home","setFrom","navigate","useNavigate","closeMenuOnSelect","components","defaultValue","isMulti","onChange","selectedOption","state","class","App","dfd","then","df","a","head","print","catch","err","console","log","height","minWidth","width","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.474fe157.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\n\r\nconst NavbarComponent = () => {\r\n    return (\r\n        <>\r\n            <Navbar bg='dark' variant='dark' className='p-0'>\r\n                <Container style={{ maxWidth: '90%' }}>\r\n                    <Navbar.Brand href='/'>Logo i nazwa</Navbar.Brand>\r\n                    <Nav className='mx-auto' style={{ fontSize: '1.4rem' }}>\r\n                        <Nav.Item className='px-1'>\r\n                            <Nav.Link href='/map'>Ruch</Nav.Link>\r\n                        </Nav.Item>\r\n                        <Nav.Item className='px-1'>\r\n                            <Nav.Link href='/map'>Analiza</Nav.Link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                    <Nav className='ml-auto'>\r\n                        <Nav.Link href='/kontakt'>Kontakt</Nav.Link>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavbarComponent;\r\n","export default __webpack_public_path__ + \"static/media/bus_stops.3efe5e42.geojson\";","import { useState } from 'react';\r\nimport { StaticMap, MapContext, NavigationControl } from 'react-map-gl';\r\nimport DeckGL, { GeoJsonLayer, LineLayer } from 'deck.gl';\r\nimport busStops from '../geodata/bus_stops.geojson';\r\nimport testData from '../geodata/testData.json';\r\nimport testData2 from '../geodata/testData2.json';\r\nimport testData3 from '../geodata/testData3.json';\r\nimport busDataPolygons from '../geodata/testBusStopsDataPolygons.json';\r\nimport testRoutes from '../geodata/testRoutes.json';\r\n\r\n// source: Natural Earth http://www.naturalearthdata.com/ via geojson.xyz\r\nconst AIR_PORTS =\r\n    'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_airports.geojson';\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n    latitude: 50.0928,\r\n    longitude: 18.5444,\r\n    zoom: 13.08,\r\n    bearing: 0,\r\n    pitch: 30,\r\n};\r\n\r\nconst MAP_STYLE = 'mapbox://styles/mapbox/light-v10';\r\nconst NAV_CONTROL_STYLE = {\r\n    position: 'absolute',\r\n    top: 10,\r\n    right: 10,\r\n};\r\n\r\nconst MapboxEx = () => {\r\n    const [hoverInfo, setHoverInfo] = useState('test');\r\n\r\n    const onClick = (info) => {\r\n        if (info.object) {\r\n            // eslint-disable-next-line\r\n            alert(`${info.object.properties.name}`);\r\n        }\r\n    };\r\n\r\n    const layers = [\r\n        new GeoJsonLayer({\r\n            id: 'busstops',\r\n            // data: busStops,\r\n            data: busDataPolygons,\r\n            // Styles\r\n            filled: true,\r\n            pointRadiusMinPixels: 2,\r\n            pointRadiusScale: 5,\r\n            getPointRadius: 5,\r\n            getFillColor: [200, 0, 80, 180],\r\n            // Interactive props\r\n            pickable: true,\r\n            extruded: true,\r\n            autoHighlight: true,\r\n            getElevation: 500,\r\n\r\n            strokeWeight: 30,\r\n            stroked: false,\r\n            opacity: 0.8,\r\n            wireframe: true,\r\n            // onHover: (info) => setHoverInfo(info),\r\n            onClick,\r\n        }),\r\n        new LineLayer({\r\n            id: 'line-layer',\r\n            data: testRoutes,\r\n            pickable: true,\r\n            getWidth: 20,\r\n            getSourcePosition: (d) => d.from.coordinates,\r\n            getTargetPosition: (d) => d.to.coordinates,\r\n            getColor: (d) => [Math.sqrt(d.inbound + d.outbound), 140, 0],\r\n        }),\r\n    ];\r\n\r\n    return (\r\n        <DeckGL\r\n            initialViewState={INITIAL_VIEW_STATE}\r\n            controller={true}\r\n            layers={layers}\r\n            ContextProvider={MapContext.Provider}\r\n            getTooltip={({ object }) => object && `${object.properties.name}`}\r\n        >\r\n            <StaticMap\r\n                mapStyle={MAP_STYLE}\r\n                mapboxApiAccessToken={\r\n                    'pk.eyJ1IjoibW5leXVnbiIsImEiOiJja3dyd3cyM3gxMHR2MnVsY2VoOGFjajlmIn0.a1LvZT2UpfZ0mysl3dkbkg'\r\n                }\r\n            />\r\n            <NavigationControl style={NAV_CONTROL_STYLE} />\r\n        </DeckGL>\r\n    );\r\n};\r\n\r\nexport default MapboxEx;\r\n","import React from 'react';\r\nimport './LeftMenu.css';\r\n\r\nconst LeftMenu = () => {\r\n  return <div className=\"leftMenuContainer\">Menu content</div>;\r\n};\r\n\r\nexport default LeftMenu;\r\n","import React from 'react';\r\nimport './HoursCard.css';\r\n\r\nconst HoursCard = () => {\r\n  return <div className=\"hourdCardContainer\">Hours 0-23</div>;\r\n};\r\n\r\nexport default HoursCard;\r\n","import React from 'react';\r\nimport './TicketTypeCard.css';\r\n\r\nconst TicketTypeCard = () => {\r\n  return <div className=\"ticketTypeContainer\">Ticket types</div>;\r\n};\r\n\r\nexport default TicketTypeCard;\r\n","import React from 'react';\r\nimport './WeekDayCard.css';\r\n\r\nconst WeekDayCard = () => {\r\n  return <div className=\"weekDayCardContainer\">WeekDayCard</div>;\r\n};\r\n\r\nexport default WeekDayCard;\r\n","import React from 'react';\r\nimport './Cards.css';\r\nimport HoursCard from './HoursCard';\r\nimport TicketTypeCard from './TicketTypeCard';\r\nimport WeekDayCard from './WeekDayCard';\r\n\r\nconst Cards = () => {\r\n  return (\r\n    <div className=\"cardsContainer\">\r\n      <HoursCard />\r\n      <TicketTypeCard />\r\n      <WeekDayCard />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from 'react';\r\nimport { Row, Col, Card, Container } from 'react-bootstrap';\r\nimport MapboxEx from '../components/MapboxEx';\r\nimport makeAnimated from 'react-select/animated';\r\nimport './MapContainer.css';\r\nimport LeftMenu from '../components/LeftMenu';\r\nimport Cards from '../components/cards/Cards';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst MapContainer = () => {\r\n  const [from, setFrom] = React.useState([]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setFrom((state) => [...state, selectedOption]);\r\n  };\r\n  return (\r\n    <>\r\n      <Card className=\"mapContainer\">\r\n        <Card.Body>\r\n          <MapboxEx></MapboxEx>\r\n        </Card.Body>\r\n      </Card>\r\n      <LeftMenu />\r\n      <Cards />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MapContainer;\r\n","export const options = [\r\n  {\r\n    label: 'Group 1',\r\n    options: [\r\n      { value: 'p1', label: 'Przystanek1' },\r\n      { value: 'p2', label: 'Przystanek2' },\r\n      { value: 'p3', label: 'Przystanek3' },\r\n    ],\r\n  },\r\n\r\n  {\r\n    label: 'Group 2',\r\n    options: [\r\n      { value: 'p4', label: 'Przystanek4' },\r\n      { value: 'p5', label: 'Przystanek5' },\r\n      { value: 'p6', label: 'Przystanek6' },\r\n    ],\r\n  },\r\n  {\r\n    label: 'Group 3',\r\n    options: [\r\n      { value: 'p7', label: 'Przystanek7' },\r\n      { value: 'p8', label: 'Przystanek8' },\r\n    ],\r\n  },\r\n];\r\n","import React from 'react';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport './Home.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { options } from '../data.js';\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst Home = () => {\r\n  const [from, setFrom] = React.useState([]);\r\n\r\n  const handleChange = (selectedOption) => {\r\n    setFrom((state) => [...state, selectedOption]);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const routeChange = () => {\r\n    navigate('/map');\r\n  };\r\n\r\n  return (\r\n    <div className=\"homeContainer\">\r\n      <div className=\"selectbox\">\r\n        <div className=\"label\">Przystanek początkowy</div>\r\n        <Select\r\n          closeMenuOnSelect={false}\r\n          components={animatedComponents}\r\n          defaultValue={from}\r\n          isMulti\r\n          options={options}\r\n          onChange={handleChange}\r\n          options={options}\r\n        />\r\n      </div>\r\n      <button class=\"nextButton\" onClick={routeChange}>\r\n        Dalej\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","// import './App.css';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport NavbarComponent from './components/NavbarComponent';\r\nimport { Container } from 'react-bootstrap';\r\nimport MapContainer from './pages/MapContainer';\r\nimport Home from './pages/Home';\r\nimport * as dfd from 'danfojs/dist/index';\r\n\r\nfunction App() {\r\n  function load_csv() {\r\n    // const dfd = require('danfojs-node')\r\n    dfd\r\n      .read_csv('Dane_Ostateczne_1.csv')\r\n      .then(async (df) => {\r\n        df['Przystanek_Początkowy'].head().print();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  load_csv();\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"overflow-hidden\">\r\n        <Container\r\n          className=\"px-0\"\r\n          style={{ height: '95vh', minWidth: '100%', width: '100%' }}>\r\n          <NavbarComponent></NavbarComponent>\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} />\r\n            <Route path=\"/map\" element={<MapContainer />} />\r\n          </Routes>\r\n        </Container>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}