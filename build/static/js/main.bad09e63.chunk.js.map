{"version":3,"sources":["geodata/bus_stops.geojson","components/MapboxEx.js","components/Navbar.js","App.js","index.js"],"names":["INITIAL_VIEW_STATE","latitude","longitude","zoom","bearing","pitch","NAV_CONTROL_STYLE","position","top","left","MapboxEx","layers","GeoJsonLayer","id","data","busStops","filled","pointRadiusMinPixels","pointRadiusScale","getPointRadius","getFillColor","pickable","autoHighlight","onClick","info","object","alert","properties","name","abbrev","initialViewState","controller","ContextProvider","MapContext","Provider","mapStyle","mapboxApiAccessToken","style","NavbarComponent","Navbar","bg","variant","className","Container","Brand","href","Nav","Link","App","Row","Col","md","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAAe,MAA0B,0C,OCQnCA,EAAqB,CACvBC,SAAU,QACVC,UAAW,QACXC,KAAM,MACNC,QAAS,EACTC,MAAO,IAILC,EAAoB,CACtBC,SAAU,WACVC,IAAK,GACLC,KAAM,IA4DKC,EAzDE,WACb,IASMC,EAAS,CACX,IAAIC,IAAa,CACbC,GAAI,WACJC,KAAMC,EAENC,QAAQ,EACRC,qBAAsB,EACtBC,iBAAkB,EAClBC,eAAgB,EAChBC,aAAc,CAAC,IAAK,EAAG,GAAI,KAE3BC,UAAU,EACVC,eAAe,EACfC,QAtBQ,SAACC,GACTA,EAAKC,QAELC,MAAM,GAAD,OACEF,EAAKC,OAAOE,WAAWC,KADzB,aACkCJ,EAAKC,OAAOE,WAAWE,OADzD,UAmCb,OACI,eAAC,IAAD,CACIC,iBAAkB9B,EAClB+B,YAAY,EACZpB,OAAQA,EACRqB,gBAAiBC,IAAWC,SAJhC,UAMI,cAAC,IAAD,CACIC,SAtDE,qCAuDFC,qBACI,8FAGR,cAAC,IAAD,CAAmBC,MAAO/B,Q,2BCzDvBgC,EAfS,WACpB,OACI,mCACI,cAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,UAAU,MAA3C,SACI,eAACC,EAAA,EAAD,WACI,cAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,QAAnB,sBACA,cAACC,EAAA,EAAD,CAAKJ,UAAU,UAAf,SACI,cAACI,EAAA,EAAIC,KAAL,CAAUF,KAAK,WAAf,+B,kBCWTG,MAhBf,WACI,OACI,sBAAKN,UAAU,MAAf,UACI,cAAC,EAAD,IACA,eAACO,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,sBACA,cAACD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACI,8BACI,cAAC,EAAD,eCPxBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.bad09e63.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bus_stops.75c28ec7.geojson\";","import { StaticMap, MapContext, NavigationControl } from 'react-map-gl';\r\nimport DeckGL, { GeoJsonLayer, ArcLayer } from 'deck.gl';\r\nimport busStops from '../geodata/bus_stops.geojson';\r\n\r\n// source: Natural Earth http://www.naturalearthdata.com/ via geojson.xyz\r\nconst AIR_PORTS =\r\n    'https://d2ad6b4ur7yvpq.cloudfront.net/naturalearth-3.3.0/ne_10m_airports.geojson';\r\n\r\nconst INITIAL_VIEW_STATE = {\r\n    latitude: 50.0928,\r\n    longitude: 18.5444,\r\n    zoom: 13.08,\r\n    bearing: 0,\r\n    pitch: 30,\r\n};\r\n\r\nconst MAP_STYLE = 'mapbox://styles/mapbox/streets-v11';\r\nconst NAV_CONTROL_STYLE = {\r\n    position: 'absolute',\r\n    top: 10,\r\n    left: 10,\r\n};\r\n\r\nconst MapboxEx = () => {\r\n    const onClick = (info) => {\r\n        if (info.object) {\r\n            // eslint-disable-next-line\r\n            alert(\r\n                `${info.object.properties.name} (${info.object.properties.abbrev})`\r\n            );\r\n        }\r\n    };\r\n\r\n    const layers = [\r\n        new GeoJsonLayer({\r\n            id: 'airports',\r\n            data: busStops,\r\n            // Styles\r\n            filled: true,\r\n            pointRadiusMinPixels: 2,\r\n            pointRadiusScale: 5,\r\n            getPointRadius: 5,\r\n            getFillColor: [200, 0, 80, 180],\r\n            // Interactive props\r\n            pickable: true,\r\n            autoHighlight: true,\r\n            onClick,\r\n        }),\r\n        // new ArcLayer({\r\n        //     id: 'arcs',\r\n        //     data: AIR_PORTS,\r\n        //     // dataTransform: (d) =>\r\n        //     //     d.features.filter((f) => f.properties.scalerank < 4),\r\n        //     // // Styles\r\n        //     // getSourcePosition: (f) => [-0.4531566, 51.4709959], // London\r\n        //     // getTargetPosition: (f) => f.geometry.coordinates,\r\n        //     getSourceColor: [0, 128, 200],\r\n        //     getTargetColor: [200, 0, 80],\r\n        //     getWidth: 1,\r\n        // }),\r\n    ];\r\n\r\n    return (\r\n        <DeckGL\r\n            initialViewState={INITIAL_VIEW_STATE}\r\n            controller={true}\r\n            layers={layers}\r\n            ContextProvider={MapContext.Provider}\r\n        >\r\n            <StaticMap\r\n                mapStyle={MAP_STYLE}\r\n                mapboxApiAccessToken={\r\n                    'pk.eyJ1IjoibW5leXVnbiIsImEiOiJja3dwNmZqMzgwOXEzMm9wMzNtcXg4b2hkIn0.UvTBr-hLirOkwGXLbPwqgQ'\r\n                }\r\n            />\r\n            <NavigationControl style={NAV_CONTROL_STYLE} />\r\n        </DeckGL>\r\n    );\r\n};\r\n\r\nexport default MapboxEx;\r\n","import React from 'react';\r\nimport { Container, Nav, Navbar } from 'react-bootstrap';\r\n\r\nconst NavbarComponent = () => {\r\n    return (\r\n        <>\r\n            <Navbar bg='dark' variant='dark' className='p-0'>\r\n                <Container>\r\n                    <Navbar.Brand href='#home'>Klimaton</Navbar.Brand>\r\n                    <Nav className='ml-auto'>\r\n                        <Nav.Link href='#kontakt'>Kontakt</Nav.Link>\r\n                    </Nav>\r\n                </Container>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavbarComponent;\r\n","import './App.css';\r\nimport MapboxEx from './components/MapboxEx';\r\nimport NavbarComponent from './components/Navbar';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='App'>\r\n            <NavbarComponent></NavbarComponent>\r\n            <Row>\r\n                <Col md={3}>asdfzsdf</Col>\r\n                <Col md={9}>\r\n                    <div>\r\n                        <MapboxEx></MapboxEx>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}